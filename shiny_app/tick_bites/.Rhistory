shiny::runApp()
runApp()
runApp()
runApp()
knitr::opts_chunk$set(echo = TRUE)
tbe <- read.csv("raw_data/cases_tick_diseases/tbe.csv")
tbe <- read.csv("raw_data/cases_tick_diseases/tbe.csv", header=T)
tbe <- read.csv("raw_data/cases_tick_diseases/tbe.csv")
lyme <- read.csv("raw_data/cases_tick_diseases/lyme_disease.csv")
ggplot() +
geom_bar(data=tbe, mapping=aes(x = ï..year, y=cases))
ggplot() +
geom_bar(data=tbe, mapping=aes(x = ï..year, y=cases), stat="identity")
ggplot() +
geom_bar(data=tbe, mapping=aes(x = ï..year, y=cases), stat="identity") +
labs(x = "", y = "Number of cases", title="Number of TBE cases")
theme_minimal()
ggplot() +
geom_bar(data=tbe, mapping=aes(x = ï..year, y=cases), stat="identity") +
labs(x = "", y = "Number of cases", title="Number of TBE cases") +
theme_minimal()
library(patchwork)
tbe_cases <- ggplot() +
geom_bar(data=tbe, mapping=aes(x = ï..year, y=cases), stat="identity") +
labs(x = "", y = "Number of cases", title="Number of TBE cases") +
theme_minimal()
lyme_cases <- ggplot() +
geom_bar(data=lyme, mapping=aes(x = ï..year, y=cases), stat="identity") +
labs(x = "", y = "Estimated number of cases", title="Estimated number of Lyme disease cases") +
theme_minimal()
tbe_cases + lyme_cases
library(patchwork)
tbe_cases <- ggplot() +
geom_bar(data=tbe, mapping=aes(x = ï..year, y=cases), stat="identity") +
labs(x = "", y = "Number of cases", title="Number of TBE cases") +
theme_minimal()
lyme_cases <- ggplot() +
geom_bar(data=lyme, mapping=aes(x = ï..year, y=cases), stat="identity") +
labs(x = "", y = "Estimated number of cases", title="Number of Lyme disease cases") +
theme_minimal()
tbe_cases + lyme_cases
library(patchwork)
tbe_cases <- ggplot() +
geom_bar(data=tbe, mapping=aes(x = ï..year, y=cases), stat="identity") +
labs(x = "", y = "Number of cases", title="Number of TBE cases") +
theme_minimal()
lyme_cases <- ggplot() +
geom_bar(data=lyme, mapping=aes(x = ï..year, y=cases), stat="identity") +
labs(x = "", y = "Estimated number of cases", title="Number of Lyme disease cases") +
theme_minimal()
tbe_cases + lyme_cases
tbe <- read.csv("raw_data/cases_tick_diseases/tbe.csv")
lyme <- read.csv("raw_data/cases_tick_diseases/lyme_disease.csv")
library(patchwork)
tbe_cases <- ggplot() +
geom_bar(data=tbe, mapping=aes(x = ï..year, y=cases), stat="identity") +
labs(x = "", y = "Number of cases", title="Number of TBE cases") +
theme_minimal()
lyme_cases <- ggplot() +
geom_bar(data=lyme, mapping=aes(x = ï..year, y=cases), stat="identity") +
labs(x = "", y = "Estimated number of cases", title="Number of Lyme disease cases") +
theme_minimal()
tbe_cases + lyme_cases
library(patchwork)
tbe_cases <- ggplot() +
geom_bar(data=tbe, mapping=aes(x = ï..year, y=cases), stat="identity") +
labs(x = "", y = "Number of cases", title="Number of TBE cases") +
theme_minimal()
lyme_cases <- ggplot() +
geom_bar(data=lyme, mapping=aes(x = ï..year, y=cases), stat="identity") +
labs(x = "", y = "Estimated number of cases", title="Number of Lyme disease cases") +
theme_minimal()
lyme_cases + tbe_cases
library(patchwork)
tbe_cases <- ggplot() +
geom_bar(data=tbe, mapping=aes(x = ï..year, y=cases), stat="identity") +
labs(x = "", y = "Number of cases", title="Number of TBE cases") +
theme_minimal()
lyme_cases <- ggplot() +
geom_bar(data=lyme, mapping=aes(x = ï..year, y=cases), stat="identity") +
labs(x = "", y = "Estimated number of cases", title="Number of Lyme disease cases") +
theme_minimal()
lyme_cases + tbe_cases
ggsave("figures_report/tick_disease_cases.png")
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(raster)
library(dplyr)
library(data.table)
library(mapview)
library(ggplot2)
library(scales)
library(sf)
library(raster)
library(dplyr)
library(data.table)
library(mapview)
library(ggplot2)
library(scales)
library(patchwork)
tick_risk <- read_sf("processed_data/tick_bite_risk/tick_bite_risk.shp") %>%
mutate(id=row_number())
#tickbites <- read.csv("raw_data/20230611-tick-reports.csv", sep=";") %>%
#  st_as_sf(coords=c("Lon", "Lat"), crs=4326) %>%
#  st_transform(2056) %>%
#  select(geometry, date, ID)
#fishnet <- read_sf("processed_data/fishnet/fishnet.shp")
#tickbiterisk <- read_sf("processed_data/tick_bite_risk/tick_bite_risk.shp")
#tickbites <- tickbites %>%
#  mutate(month=month(ymd_hms(date)))
#tickbites$season <- ifelse(tickbites$month %in% c(12, 1, 2), "Winter",
#                      ifelse(tickbites$month %in% c(3, 4, 5), "Spring",
#                             ifelse(tickbites$month %in% c(6, 7, 8), "Summer", "Autumn")))
# hann de code obe is data processing tah und nachher grad als shp abgspeicheret für de report
tickbites <- read_sf("processed_data/tick_bites/tick_bites_plateau.shp")
tickbites_spring <- tickbites %>% filter(season=="Spring")
tickbites_autumn <- tickbites %>% filter(season=="Autumn")
tickbites_summer <- tickbites %>% filter(season=="Summer")
tickbites_winter <- tickbites %>% filter(season=="Winter")
joined_spring <- st_join(tickbites_spring, tick_risk, left = TRUE)
joined_autumn <- st_join(tickbites_autumn, tick_risk, left = TRUE)
joined_summer <- st_join(tickbites_summer, tick_risk, left = TRUE)
joined_winter <- st_join(tickbites_winter, tick_risk, left = TRUE)
# Count the number of points per hexagon cell
#counts_spring <- joined_spring %>%
#  group_by(id) %>%
#  summarise(bites_sp =  n())
counts_spring <- setDT(joined_spring)[, .(bites_sp = .N), by = id]
#counts_autumn <- joined_autumn %>%
#  group_by(id) %>%
#  summarise(bites_a = n())
counts_autumn <- setDT(joined_autumn)[, .(bites_a = .N), by = id]
#counts_summer <- joined_summer %>%
#  group_by(id) %>%
#  summarise(bites_su =  n())
counts_summer <- setDT(joined_summer)[, .(bites_su = .N), by = id]
#counts_winter <- joined_winter %>%
#  group_by(id) %>%
#  summarise(bites_w = n())
counts_winter <- setDT(joined_winter)[, .(bites_w = .N), by = id]
tick_risk <- tick_risk %>%
left_join(counts_winter, by = "id") %>%
left_join(counts_spring, by = "id") %>%
left_join(counts_summer, by = "id") %>%
left_join(counts_autumn, by = "id")
# replacing NA values by 0
tick_risk <- tick_risk %>%
mutate(bites_w = ifelse(is.na(bites_w), 0, bites_w)) %>%
mutate(bites_sp = ifelse(is.na(bites_sp), 0, bites_sp)) %>%
mutate(bites_su = ifelse(is.na(bites_su), 0, bites_su)) %>%
mutate(bites_a = ifelse(is.na(bites_a), 0, bites_a))
#tickbiterisk$nr_bites_spring <- counts_spring$nr_bites_spring
#tickbiterisk$nr_bites_autumn <- counts_autumn$nr_bites_autumn
#tickbiterisk$nr_bites_summer <- counts_summer$nr_bites_summer
#tickbiterisk$nr_bites_winter <- counts_winter$nr_bites_winter
# glaub normalisiere isch nöd nötig
#tickbiterisk$nr_bites_spring_norm <- tickbiterisk$nr_bites_spring / max(tickbiterisk$nr_bites_spring)
#tickbiterisk$nr_bites_autumn_norm <- tickbiterisk$nr_bites_autumn / max(tickbiterisk$nr_bites_autumn)
#tickbiterisk$nr_bites_summer_norm <- tickbiterisk$nr_bites_summer / max(tickbiterisk$nr_bites_summer)
#tickbiterisk$nr_bites_winter_norm <- tickbiterisk$nr_bites_winter / max(tickbiterisk$nr_bites_winter)
sum(tick_risk$bites_w, tick_risk$bites_sp, tick_risk$bites_su, tick_risk$bites_a, na.rm=T)
plot_bites_spring <- ggplot(data = tick_risk, mapping = aes(x=risk_sp_23, y = bites_sp)) +
geom_point(size=0.1) +
geom_smooth(method='lm', col="red") +
labs(y = "Number of recorded tick bites", x = "Tick bite risk according to indicator", title="Tick bite risk vs recorded tick bites for spring 2023") +
theme_minimal()
plot_bites_spring
plot_bites_summer <- ggplot(data = tick_risk, mapping = aes(x=risk_su_23, y = bites_su)) +
geom_point(size=0.1) +
geom_smooth(method='lm', col="red") +
labs(y = "Number of recorded tick bites", x = "Tick bite risk according to indicator", title="Tick bite risk vs recorded tick bites for summer 2023") +
theme_minimal()
plot_bites_summer
plot_bites_spring + plot_bites_summer
plot_bites_spring <- ggplot(data = tick_risk, mapping = aes(x=risk_sp_23, y = bites_sp)) +
geom_point(size=0.1) +
geom_smooth(method='lm', col="red") +
labs(y = "Number of recorded tick bites", x = "Tick bite risk according to indicator", title="Spring 2023") +
theme_minimal()
plot_bites_spring
plot_bites_summer <- ggplot(data = tick_risk, mapping = aes(x=risk_su_23, y = bites_su)) +
geom_point(size=0.1) +
geom_smooth(method='lm', col="red") +
labs(y = "Number of recorded tick bites", x = "Tick bite risk according to indicator", title="Summer 2023") +
theme_minimal()
plot_bites_summer
plot_bites_spring + plot_bites_summer
plot_bites_spring + plot_bites_summer
ggsave("figures_report/validation_plot_tick_bites.png")
